os: linux
language: shell

stages:
  - name: Perform tests
  - name: Prepare artifact
    if: branch = master && type != cron
  - name: Deploy
    if: branch = master && type != cron

services:
  - docker

install:
  - sudo apt-add-repository "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse"
  - sudo apt-get -qq update
  - sudo apt-get -t trusty-backports install shellcheck
  - sudo pip install awscli

jobs:
  include:
    - stage: Perform tests
      script:
        - echo "Check for commit ${TRAVIS_COMMIT} and tag ${TRAVIS_TAG} from branch ${TRAVIS_BRANCH}."
        - echo "This is build number ${TRAVIS_BUILD_NUMBER}, for ${TRAVIS_REPO_SLUG}."
        - mkdir /tmp/config-custom
        - docker pull almerhor/pylint:default
        - docker run --rm -v $(pwd):/pylint -v $(pwd)/test:/tmp/config-custom almerhor/pylint:default py/cloud_control_tag_action_ec2.py requirements-custom.txt
    
    - stage: Perform tests
      os: linux
      language: java
      addons:
        sonarcloud:
          organization: "alexa-cloud-control"
          token: 
            secure: "htfOlTSMo6mueq5myfwiCXTHCIue/dT15o4WM2vNqmtYKmtQi+kGjU37zeioSLKopHALST/B2j4Iab7/9Etw2oCGD+Xr+Lt2ekrx7w6yJgVW5v3DMhJ2qBnrbwWRSk2owx1B/xZUuFK6Z4cQA2Fawg0F1ayHRYcsdg9D2V22ET75aUL31V6tkINqcoL2QEhsKuuFbW2CgSShOeIAESRGwtb25nUVZdd1uH/uEA3IbI3+ksuma0RfuebFCNY/w3fZ+kXTX99Gg1evEGwKHyOgb9pc0jf+Jz6MRzM3U/495v3rMFmK+4CdEfv+e/agVjyRsfIXcUty4Z2Ux+0azJJviv6ZWXDyQzuK6QHWYx0Y/4uKZv+G0xEeHtfuvmzY50XF5wEEcIW6sKV607aj64GtzU3DHSw56wo/e/FuSnKvy1ACGkw/tqAPmxg2iqP9bQa1mrkcDTT02H678kfZZEaQtLOdzqRHPJ1Ct5ak/29D3P6B61EkVm2Kz/jyTPF9OXKIP5XC7XQveb3dP25e3HpudjHnfL4t4q/zj0ldr4ImEo9aX/wQycV49RZ5qJAQiYn8Qzx3c45gE5fB54LGkGkYq4toDIrxIOhYJYmFbiGNzDioD4OLOve2F3YhKojMm7UW0R0KGl0wMCK7NGWzVfTufbJsR0+Iy3BwAfSgFrNy5AY="
     
      script:
        - sonar-scanner

    - stage: Perform tests
      script:
        - sed -i -e "s/ACCOUNTNUMBER/${account_number}/g" Alexa-CC-ChangeTypeEc2.yml
        - sed -i -e "s/CONTEXTTABLE/${dynamodb_context}/g" Alexa-CC-ChangeTypeEc2.yml
        - aws cloudformation validate-template --region ${terraform_region} --template-body file://Alexa-CC-ChangeTypeEc2.yml

    - stage: Perform tests
      script:
        - echo "Check for commit ${TRAVIS_COMMIT} and tag ${TRAVIS_TAG} from branch ${TRAVIS_BRANCH}."
        - echo "This is build number ${TRAVIS_BUILD_NUMBER}, for ${TRAVIS_REPO_SLUG}."
        - sed -i -e "s/ACCOUNTNUMBER/${account_number}/g" Alexa-CC-ChangeTypeEc2.yml
        - sed -i -e "s/CONTEXTTABLE/${dynamodb_context}/g" Alexa-CC-ChangeTypeEc2.yml
        - docker pull almerhor/cfnlint:latest
        - docker run --rm -v $(pwd)/:/lintfiles almerhor/cfnlint -t Alexa-CC-ChangeTypeEc2.yml

    - stage: Prepare artifact
      os: linux
      language: python
      python:
        - "3.6"
      script:
        - echo "Building package"
        - cd artifacts/scripts
        - chmod +x *.sh
        - ./env_prep.sh
        - cd ../..
        - echo "Send artifact to S3"
      deploy:
        - provider: s3
          bucket: "${artifact_bucket}"
          local_dir: artifacts/package
          skip_cleanup: true

    - stage: Deploy
      script:
        - sed -i -e "s/ACCOUNTNUMBER/${account_number}/g" Alexa-CC-ChangeTypeEc2.yml
        - sed -i -e "s/CONTEXTTABLE/${dynamodb_context}/g" Alexa-CC-ChangeTypeEc2.yml
      deploy:
        provider: cloudformation
        edge: true # use DPLv2
        access_key_id: ${AWS_ACCESS_KEY_ID}
        secret_access_key: ${AWS_SECRET_ACCESS_KEY}
        capabilities: CAPABILITY_NAMED_IAM
        template: Alexa-CC-ChangeTypeEc2.yml
        stack_name: Alexa-CC-ChangeTypeEc2-Function
        region: ${terraform_region}
        wait: true
        promote: true